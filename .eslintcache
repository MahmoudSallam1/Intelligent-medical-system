[{"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\index.js":"1","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\firebase\\firebase.js":"2","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\signin.js":"3","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\appointment-layout.js":"4","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\dashboard-layout\\chart.js":"5","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\button-link\\styles\\button-link.js":"6","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\prescription-layout\\prescription-layout.js":"7","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\App.js":"8","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\signup.js":"9","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\reducers\\authReducer.js":"10","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\reducers\\rootReducer.js":"11","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\actions\\authActions.js":"12","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\general-information.js":"13","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\dashboard.js":"14","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\prescription.js":"15","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\medical-history-array.js":"16","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\patient-data.js":"17","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\prescription-layout\\prescription.js":"18","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\dashboard-layout\\list-items.js":"19","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\app-bar-drawer\\app-bar-drawer.js":"20","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\main-nav\\main-nav.js":"21","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\hero-area\\hero-area.js":"22","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\patient-data\\patient-data.js":"23","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\our-features\\our-features.js":"24","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\dashboard-layout\\dashboard.js":"25","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\constants\\routes.js":"26","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\general-medical-history.js":"27","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\home.js":"28","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\medical-history.js":"29","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\patient-data\\medical-reports.js":"30","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\dashboard-layout\\appointments.js":"31","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\footer\\footer.js":"32","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\familial-diseases.js":"33","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\general-medical-history.js":"34","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\patient-data\\diagnosis.js":"35","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\patient-data\\patient-data-form.js":"36","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\paper-wrapper\\paper-wrapper.js":"37","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\app-bar-drawer\\log-out.js":"38","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\patient-data\\confirm.js":"39","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\reducers\\patientDataReducer.js":"40","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\actions\\patientDataActions.js":"41","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\prescription-layout\\confirm.js":"42","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\prescription-layout\\prescription-form.js":"43","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\reducers\\prescriptionReducer.js":"44","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\actions\\prescriptionActions.js":"45","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\general-medical-history-form.js":"46","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\confirm.js":"47","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\smoking-alcohol.js":"48","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\reducers\\patientGeneralMedicalHistoryReducer.js":"49","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\actions\\patientGeneralMedicalHistoryActions.js":"50","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\button-link\\index.js":"51","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\our-features\\tiers.js":"52","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\dashboard-layout\\title.js":"53","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\form-stepper\\form-stepper.js":"54","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\why-us\\why-us.js":"55","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\why-us\\tiers.js":"56","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\modern-card\\modern-card.js":"57"},{"size":1842,"mtime":1619304693320,"results":"58","hashOfConfig":"59"},{"size":569,"mtime":1619304693291,"results":"60","hashOfConfig":"59"},{"size":4980,"mtime":1618573587339,"results":"61","hashOfConfig":"59"},{"size":680,"mtime":1619806725992,"results":"62","hashOfConfig":"59"},{"size":1576,"mtime":1619805724052,"results":"63","hashOfConfig":"59"},{"size":627,"mtime":1618916663179,"results":"64","hashOfConfig":"59"},{"size":726,"mtime":1619304692719,"results":"65","hashOfConfig":"59"},{"size":1305,"mtime":1619804462550,"results":"66","hashOfConfig":"59"},{"size":5060,"mtime":1618573586235,"results":"67","hashOfConfig":"59"},{"size":867,"mtime":1619304693387,"results":"68","hashOfConfig":"59"},{"size":748,"mtime":1618865911510,"results":"69","hashOfConfig":"59"},{"size":1332,"mtime":1619304693382,"results":"70","hashOfConfig":"59"},{"size":7653,"mtime":1618866062940,"results":"71","hashOfConfig":"59"},{"size":188,"mtime":1618838479901,"results":"72","hashOfConfig":"59"},{"size":772,"mtime":1619304693342,"results":"73","hashOfConfig":"59"},{"size":9055,"mtime":1618218310394,"results":"74","hashOfConfig":"59"},{"size":744,"mtime":1618600922748,"results":"75","hashOfConfig":"59"},{"size":7497,"mtime":1619304692721,"results":"76","hashOfConfig":"59"},{"size":2760,"mtime":1619304692793,"results":"77","hashOfConfig":"59"},{"size":5224,"mtime":1619806724688,"results":"78","hashOfConfig":"59"},{"size":2019,"mtime":1619304693178,"results":"79","hashOfConfig":"59"},{"size":3367,"mtime":1619348880900,"results":"80","hashOfConfig":"59"},{"size":715,"mtime":1619304692679,"results":"81","hashOfConfig":"59"},{"size":2123,"mtime":1619350817378,"results":"82","hashOfConfig":"59"},{"size":2704,"mtime":1619806195531,"results":"83","hashOfConfig":"59"},{"size":314,"mtime":1618401550116,"results":"84","hashOfConfig":"59"},{"size":808,"mtime":1619806727058,"results":"85","hashOfConfig":"59"},{"size":490,"mtime":1619349812613,"results":"86","hashOfConfig":"59"},{"size":8488,"mtime":1618864855421,"results":"87","hashOfConfig":"59"},{"size":6080,"mtime":1619304692677,"results":"88","hashOfConfig":"59"},{"size":2451,"mtime":1618218310399,"results":"89","hashOfConfig":"59"},{"size":2623,"mtime":1619348878508,"results":"90","hashOfConfig":"59"},{"size":6073,"mtime":1618865478229,"results":"91","hashOfConfig":"59"},{"size":780,"mtime":1619806300325,"results":"92","hashOfConfig":"59"},{"size":4524,"mtime":1618608328206,"results":"93","hashOfConfig":"59"},{"size":1861,"mtime":1619304692678,"results":"94","hashOfConfig":"59"},{"size":1454,"mtime":1619806590120,"results":"95","hashOfConfig":"59"},{"size":919,"mtime":1619304692492,"results":"96","hashOfConfig":"59"},{"size":4726,"mtime":1618787523140,"results":"97","hashOfConfig":"59"},{"size":430,"mtime":1619304693388,"results":"98","hashOfConfig":"59"},{"size":743,"mtime":1618872406354,"results":"99","hashOfConfig":"59"},{"size":4344,"mtime":1618840335155,"results":"100","hashOfConfig":"59"},{"size":1342,"mtime":1619304692693,"results":"101","hashOfConfig":"59"},{"size":418,"mtime":1619304693391,"results":"102","hashOfConfig":"59"},{"size":747,"mtime":1618872405415,"results":"103","hashOfConfig":"59"},{"size":3027,"mtime":1619304692550,"results":"104","hashOfConfig":"59"},{"size":5619,"mtime":1618866268995,"results":"105","hashOfConfig":"59"},{"size":3515,"mtime":1619304692596,"results":"106","hashOfConfig":"59"},{"size":494,"mtime":1619304693390,"results":"107","hashOfConfig":"59"},{"size":821,"mtime":1618872403979,"results":"108","hashOfConfig":"59"},{"size":631,"mtime":1618916661516,"results":"109","hashOfConfig":"59"},{"size":2146,"mtime":1618921361296,"results":"110","hashOfConfig":"59"},{"size":356,"mtime":1618218310400,"results":"111","hashOfConfig":"59"},{"size":478,"mtime":1619304693135,"results":"112","hashOfConfig":"59"},{"size":2004,"mtime":1619351049411,"results":"113","hashOfConfig":"59"},{"size":1002,"mtime":1619349774234,"results":"114","hashOfConfig":"59"},{"size":171,"mtime":1619806190328,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"dd0yeb",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"133"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"133"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"159"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\index.js",[],["251","252"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\firebase\\firebase.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\signin.js",["253","254"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as ROUTES from \"../constants/routes\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../store/actions/authActions\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(/images/sign-in.png)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n\r\n  error: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const isInvalid = (password === \"\") | (email === \"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.signIn({ email, password });\r\n  }\r\n\r\n  const { authError, auth } = props;\r\n\r\n  if (auth.uid) return <Redirect to={ROUTES.DASHBOARD} />;\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n\r\n          <div className=\"\">\r\n            {authError ? (\r\n              <Alert className={classes.error} severity=\"error\">\r\n                {authError}\r\n              </Alert>\r\n            ) : null}\r\n          </div>\r\n          <form className={classes.form} onSubmit={handleSubmit} method=\"POST\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={({ target }) => setEmail(target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              // disabled={isInvalid}\r\n            >\r\n              Sign In\r\n            </Button>\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link>Forgot password?</Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to={ROUTES.SIGN_UP}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n",["255","256"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\appointment-layout.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\dashboard-layout\\chart.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\button-link\\styles\\button-link.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\prescription-layout\\prescription-layout.js",[],["257","258"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\App.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\signup.js",["259","260"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { signUp } from \"../store/actions/authActions\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    height: \"100vh\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"90vh\",\r\n    background: \"#fff\",\r\n    padding: \"2em\",\r\n    borderRadius: \"8px\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignUp(props) {\r\n  const classes = useStyles();\r\n\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const isInvalid = displayName === \"\" || password === \"\" || email === \"\";\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.signUp({ email, password, displayName });\r\n  }\r\n\r\n  const { auth, authError } = props;\r\n  if (auth.uid) return <Redirect to={ROUTES.DASHBOARD} />;\r\n\r\n  return (\r\n    <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n\r\n      <Box className={classes.paper} boxShadow={1}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n\r\n        <div className=\"\">\r\n          {authError ? (\r\n            <Alert className={classes.error} severity=\"error\">\r\n              {authError}\r\n            </Alert>\r\n          ) : null}\r\n        </div>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={handleSubmit}\r\n          method=\"POST\"\r\n          //   noValidate\r\n        >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"displayName\"\r\n            label=\"Display name\"\r\n            name=\"displayName\"\r\n            autoComplete=\"text\"\r\n            autoFocus\r\n            onChange={({ target }) => setDisplayName(target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={({ target }) => setEmail(target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm password\"\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            autoComplete=\"current-password\"\r\n            onChange={({ target }) => setConfirmPassword(target.value)}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            // disabled={isInvalid}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              Already a user?\r\n              <Link to={ROUTES.SIGN_IN}> Sign in now.</Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n",["261","262"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\reducers\\authReducer.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\reducers\\rootReducer.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\actions\\authActions.js",["263"],"import * as ROUTES from \"../../constants/routes\";\r\n\r\nexport const signIn = ({ email, password }) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = ({ email, password, displayName }) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        return firestore.collection(\"doctors\").doc(res.user.uid).set({\r\n          displayName: displayName,\r\n        });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\general-information.js",["264","265","266","267"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\dashboard.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\prescription.js",[],["268","269"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\medical-history-array.js",[],["270","271"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\patient-data.js",[],["272","273"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\prescription-layout\\prescription.js",["274","275"],"import React, { useState } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  gray: {\r\n    color: \"#616161\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  ourFlex: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"1em\",\r\n  },\r\n  button: {\r\n    marginLeft: \"1em\",\r\n  },\r\n  card: {\r\n    padding: \"2em\",\r\n    background: \"#EEF9FE\",\r\n  },\r\n  doctorHeading: {\r\n    color: \"#1DB5E4\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  subtitle: {\r\n    color: \"#757575\",\r\n    fontSize: \"0.8rem\",\r\n    fontWeight: \"400\",\r\n  },\r\n  btnGroup: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction Prescription({\r\n  formData,\r\n  setFormData,\r\n  nextStep,\r\n  prevStep,\r\n  activeStep,\r\n  steps,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [isRecord, setIsRecord] = useState(false);\r\n\r\n  function handleNext(e) {\r\n    e.preventDefault();\r\n    nextStep();\r\n  }\r\n\r\n  function handleBack(e) {\r\n    e.preventDefault();\r\n    prevStep();\r\n  }\r\n\r\n  const { transcript, resetTranscript } = useSpeechRecognition();\r\n\r\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n    return null;\r\n  }\r\n\r\n  \r\n  return (\r\n    <Container>\r\n      <form\r\n      //   noValidate\r\n      >\r\n        <Grid spacing={3} container>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <div>\r\n              <div className={classes.btnGroup}>\r\n                {\" \"}\r\n                {isRecord ? (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={() => {\r\n                      setIsRecord(!isRecord);\r\n                      SpeechRecognition.stopListening();\r\n                    }}\r\n                    endIcon={<PauseIcon />}\r\n                  >\r\n                    Pause\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      setIsRecord(!isRecord);\r\n                      SpeechRecognition.startListening({\r\n                        continuous: true,\r\n                        // language: \"ar-EG\",\r\n                      });\r\n                    }}\r\n                    className={classes.button}\r\n                    endIcon={<MicIcon />}\r\n                  >\r\n                    Record\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<PrintIcon />}\r\n                >\r\n                  Print\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br></br>\r\n        <Grid container>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <Paper elevation={0} className={classes.card}>\r\n              <div className={classes.ourFlex}>\r\n                {\" \"}\r\n                <div>\r\n                  <Typography\r\n                    className={classes.doctorHeading}\r\n                    align={\"left\"}\r\n                    variant=\"h6\"\r\n                    gutterBottom\r\n                  >\r\n                    Doctor Name{\" \"}\r\n                  </Typography>\r\n                  <Typography\r\n                    className={classes.subtitle}\r\n                    align={\"left\"}\r\n                    variant=\"h6\"\r\n                  >\r\n                    Specilaiztion{\" \"}\r\n                  </Typography>\r\n                  <Typography\r\n                    className={classes.subtitle}\r\n                    align={\"left\"}\r\n                    variant=\"h6\"\r\n                  >\r\n                    Address{\" \"}\r\n                  </Typography>\r\n                  <Typography\r\n                    className={classes.subtitle}\r\n                    align={\"left\"}\r\n                    variant=\"h6\"\r\n                  >\r\n                    Phone Number{\" \"}\r\n                  </Typography>\r\n                  <Typography\r\n                    className={classes.subtitle}\r\n                    align={\"left\"}\r\n                    variant=\"h6\"\r\n                  >\r\n                    Working hours{\" \"}\r\n                  </Typography>\r\n                </div>{\" \"}\r\n                <div>\r\n                  <Typography\r\n                    className={classes.doctorHeading}\r\n                    align={\"left\"}\r\n                    variant=\"h6\"\r\n                  >\r\n                    Patient Name{\" \"}\r\n                  </Typography>\r\n                  <Typography\r\n                    className={classes.subtitle}\r\n                    align={\"left\"}\r\n                    variant=\"h6\"\r\n                  >\r\n                    Age{\" \"}\r\n                  </Typography>\r\n                  <Typography\r\n                    className={classes.subtitle}\r\n                    align={\"left\"}\r\n                    variant=\"h6\"\r\n                  >\r\n                    Date{\" \"}\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n              <Divider />\r\n\r\n              <div style={{ marginTop: \"2em\" }}>\r\n                <TextField\r\n                  id=\"standard-textarea\"\r\n                  placeholder=\"Prescription\"\r\n                  onChange={(e) => {\r\n                    setFormData({\r\n                      ...formData,\r\n                      prescription: e.target.value,\r\n                    });\r\n                  }}\r\n                  multiline\r\n                  fullWidth\r\n                  value={formData.prescription}\r\n                />\r\n              </div>\r\n\r\n              <div style={{ marginTop: \"4em\" }}>\r\n                <Typography\r\n                  className={classes.subtitle}\r\n                  align={\"left\"}\r\n                  variant=\"h6\"\r\n                >\r\n                  Signature{\" \"}\r\n                </Typography>\r\n                <br></br>\r\n                <Divider style={{ width: \"30%\" }} />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </form>{\" \"}\r\n      <br></br>\r\n      <br></br>\r\n      <div className={classes.btnGroup}>\r\n        <Button\r\n          disabled={activeStep === 0}\r\n          onClick={handleBack}\r\n          className={classes.button}\r\n        >\r\n          Back\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleNext}\r\n          className={classes.button}\r\n        >\r\n          {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Prescription;\r\n","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\dashboard-layout\\list-items.js",[],["276","277"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\app-bar-drawer\\app-bar-drawer.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\main-nav\\main-nav.js",["278"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\hero-area\\hero-area.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\patient-data\\patient-data.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\our-features\\our-features.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\dashboard-layout\\dashboard.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\constants\\routes.js",[],["279","280"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\general-medical-history.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\pages\\home.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\medical-history.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\patient-data\\medical-reports.js",["281","282","283","284"],"import React, { useState } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport { DropzoneDialog } from \"material-ui-dropzone\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport KeyboardIcon from \"@material-ui/icons/Keyboard\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gray: {\r\n    color: \"#616161\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  ourFlex: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: \"1em\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n    padding: \"0.5em 1.5em\",\r\n  },\r\n  btnGroup: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction MedicalReports({\r\n  formData,\r\n  setFormData,\r\n  nextStep,\r\n  prevStep,\r\n  activeStep,\r\n  steps,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [files, setFiles] = useState();\r\n  const [isRecord, setIsRecord] = useState(false);\r\n\r\n  //Speech Recognition\r\n  const { transcript, resetTranscript } = useSpeechRecognition();\r\n\r\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n    return null;\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleSave(files) {\r\n    setFiles(files);\r\n    setOpen(false);\r\n  }\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleNext(e) {\r\n    e.preventDefault();\r\n    nextStep();\r\n  }\r\n\r\n  function handleBack(e) {\r\n    e.preventDefault();\r\n    prevStep();\r\n  }\r\n  // console.log(document.querySelectorAll(\" p * div \"));\r\n\r\n  return (\r\n    <Container>\r\n      <form\r\n      //   noValidate\r\n      >\r\n        <Grid spacing={3} container>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <div className={classes.ourFlex}>\r\n              <Typography\r\n                className={classes.gray}\r\n                align={\"left\"}\r\n                variant=\"h6\"\r\n                gutterBottom\r\n              >\r\n                Symptoms{\" \"}\r\n              </Typography>\r\n\r\n              <div>\r\n                {isRecord ? (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={() => {\r\n                      setIsRecord(!isRecord);\r\n                      SpeechRecognition.stopListening();\r\n                    }}\r\n                    endIcon={<PauseIcon />}\r\n                  >\r\n                    Pause\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      setIsRecord(!isRecord);\r\n                      SpeechRecognition.startListening({\r\n                        continuous: true,\r\n                        // language: \"ar-EG\",\r\n                      });\r\n                    }}\r\n                    className={classes.button}\r\n                    endIcon={<MicIcon />}\r\n                  >\r\n                    Record\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <TextField\r\n              id=\"symptoms\"\r\n              label=\"Symptoms\"\r\n              value={formData.symptoms}\r\n              onChange={(e) => {\r\n                setFormData({\r\n                  ...formData,\r\n                  symptoms: e.target.value,\r\n                });\r\n              }}\r\n              multiline\r\n              fullWidth\r\n              rowsMax={4}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br></br>\r\n        <Typography\r\n          className={classes.gray}\r\n          align={\"left\"}\r\n          variant=\"h6\"\r\n          gutterBottom\r\n        >\r\n          Upload Reports / Radiology{\" \"}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <div style={{ textAlign: \"left\" }}>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n                Upload Reports\r\n              </Button>\r\n              <DropzoneDialog\r\n                open={open}\r\n                onSave={(files) => handleSave(files)}\r\n                acceptedFiles={[\"image/jpeg\", \"image/png\", \"image/bmp\"]}\r\n                showPreviews={true}\r\n                maxFileSize={5000000}\r\n                onClose={handleClose}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <div style={{ textAlign: \"left\" }}>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n                Upload Radiology\r\n              </Button>\r\n              <DropzoneDialog\r\n                open={open}\r\n                onSave={(files) => handleSave(files)}\r\n                acceptedFiles={[\"image/jpeg\", \"image/png\", \"image/bmp\"]}\r\n                showPreviews={true}\r\n                maxFileSize={5000000}\r\n                onClose={handleClose}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </form>{\" \"}\r\n      <br></br>\r\n      <br></br>\r\n      <div className={classes.btnGroup}>\r\n        <Button\r\n          disabled={activeStep === 0}\r\n          onClick={handleBack}\r\n          className={classes.button}\r\n        >\r\n          Back\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleNext}\r\n          className={classes.button}\r\n        >\r\n          {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MedicalReports;\r\n","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\dashboard-layout\\appointments.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\footer\\footer.js",["285","286"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"\" align=\"center\">\r\n      {\"Copyright © IntelligentMedicalSystem \"}\r\n\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \"@global\": {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: \"none\",\r\n    },\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n    color: \"#fff\",\r\n  },\r\n\r\n  section: {\r\n    background: \"#1DB5E4\",\r\n    padding:'4em 2em'\r\n\r\n  },\r\n  item: {\r\n    color: \"#fff\",\r\n  },\r\n  title:{\r\n    color: \"#fff\",\r\n\r\n  },\r\n\r\n}));\r\n\r\nconst footers = [\r\n  {\r\n    title: \"Company\",\r\n    description: [\"Team\", \"History\", \"Contact us\", \"Locations\"],\r\n  },\r\n  {\r\n    title: \"Features\",\r\n    description: [\r\n      \"Cool stuff\",\r\n      \"Random feature\",\r\n      \"Team feature\",\r\n      \"Developer stuff\",\r\n      \"Another one\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Resources\",\r\n    description: [\r\n      \"Resource\",\r\n      \"Resource name\",\r\n      \"Another resource\",\r\n      \"Final resource\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Legal\",\r\n    description: [\"Privacy policy\", \"Terms of use\"],\r\n  },\r\n];\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.section}>\r\n        <Container maxWidth=\"lg\" component=\"footer\" className={classes.footer}>\r\n          <Grid container spacing={3} justify=\"space-evenly\">\r\n            {footers.map((footer) => (\r\n              <Grid item xs={6} sm={6} md={3} key={footer.title}>\r\n                <Typography className={classes.title} variant=\"h6\" gutterBottom>\r\n                  {footer.title}\r\n                </Typography>\r\n                <ul>\r\n                  {footer.description.map((item) => (\r\n                    <li key={item}>\r\n                      <Link className={classes.item} href=\"#\">\r\n                        {item}\r\n                      </Link>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          {/* <Box mt={5}>\r\n            <Copyright />\r\n          </Box> */}\r\n        </Container>\r\n      </div>\r\n      {/* End footer */}\r\n    </>\r\n  );\r\n}\r\n","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\familial-diseases.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\general-medical-history.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\patient-data\\diagnosis.js",["287","288"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gray: {\r\n    color: \"#616161\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  ourFlex: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: \"1em\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n    padding: \"0.5em 1.5em\",\r\n  },\r\n  btnGroup: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction Diagnosis({\r\n  formData,\r\n  setFormData,\r\n  nextStep,\r\n  prevStep,\r\n  activeStep,\r\n  steps,\r\n}) {\r\n  const classes = useStyles();\r\n  const [isRecord, setIsRecord] = useState(false);\r\n\r\n  //Speech Recognition\r\n\r\n  const { transcript, resetTranscript } = useSpeechRecognition();\r\n\r\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n    return null;\r\n  }\r\n\r\n  function handleNext(e) {\r\n    e.preventDefault();\r\n    nextStep();\r\n  }\r\n\r\n  function handleBack(e) {\r\n    e.preventDefault();\r\n    prevStep();\r\n  }\r\n\r\n  console.log(formData);\r\n\r\n  return (\r\n    <Container>\r\n      <form\r\n      //   noValidate\r\n      >\r\n        <Grid spacing={3} container>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <div className={classes.ourFlex}>\r\n              <Typography\r\n                className={classes.gray}\r\n                align={\"left\"}\r\n                variant=\"h6\"\r\n                gutterBottom\r\n              >\r\n                Diagnosis{\" \"}\r\n              </Typography>\r\n\r\n              {isRecord ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  onClick={() => {\r\n                    setIsRecord(!isRecord);\r\n                    SpeechRecognition.stopListening();\r\n                  }}\r\n                  endIcon={<PauseIcon />}\r\n                >\r\n                  Pause\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setIsRecord(!isRecord);\r\n                    SpeechRecognition.startListening({\r\n                      continuous: true,\r\n                      // language: \"ar-EG\",\r\n                    });\r\n                  }}\r\n                  className={classes.button}\r\n                  endIcon={<MicIcon />}\r\n                >\r\n                  Record\r\n                </Button>\r\n              )}\r\n            </div>\r\n\r\n            <TextField\r\n              id=\"outlined-multiline-flexible\"\r\n              placeholder=\"Diagnosis\"\r\n              multiline\r\n              fullWidth\r\n              rowsMax={4}\r\n              value={formData.diagnosis}\r\n              onChange={(e) => {\r\n                setFormData({\r\n                  ...formData,\r\n                  diagnosis: e.target.value,\r\n                });\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br></br>\r\n\r\n        <TextField\r\n          id=\"comments\"\r\n          value={formData.comments}\r\n          onChange={(e) => {\r\n            setFormData({\r\n              ...formData,\r\n              comments: e.target.value,\r\n            });\r\n          }}\r\n          placeholder=\"Comments\"\r\n          multiline\r\n          fullWidth\r\n        />\r\n      </form>{\" \"}\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <div className={classes.btnGroup}>\r\n        <Button\r\n          disabled={activeStep === 0}\r\n          onClick={handleBack}\r\n          className={classes.button}\r\n        >\r\n          Back\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleNext}\r\n          className={classes.button}\r\n        >\r\n          {/* {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"} */}\r\n          Next\r\n        </Button>\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Diagnosis;\r\n",["289","290"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\patient-data\\patient-data-form.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\paper-wrapper\\paper-wrapper.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\app-bar-drawer\\log-out.js",["291"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\patient-data\\confirm.js",["292"],"import React, { useState } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core/\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createPatientData } from \"../../../store/actions/patientDataActions\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\n\r\n\r\nconst sleep = (time) => new Promise((acc) => setTimeout(acc, time));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n    padding: \"0.5em 1.5em\",\r\n  },\r\n  btnGroup: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction Confirm({\r\n  createPatientData,\r\n  history,\r\n  formData,\r\n  setFormData,\r\n  nextStep,\r\n  prevStep,\r\n  activeStep,\r\n  steps,\r\n  setActiveStep,\r\n}) {\r\n  const classes = useStyles();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n    setActiveStep(0);\r\n  };\r\n\r\n  function handleBack(e) {\r\n    e.preventDefault();\r\n    prevStep();\r\n  }\r\n\r\n  async function handleConfirm(e) {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    console.log(\"submitting to DB...\");\r\n    // await sleep(2000);\r\n    createPatientData(formData);\r\n    setOpen(true);\r\n    setIsSubmitting(false);\r\n    setFormData({});\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container>\r\n        <Grid item xs={12} md={12} lg={12}>\r\n          <>\r\n            <AppBar title=\"Confirm User Data\" />\r\n            <List>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"First Name\"\r\n                  secondary={formData.diagnosis}\r\n                />\r\n              </ListItem>\r\n              <Divider />\r\n\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"Last Name\"\r\n                  secondary={formData.symptoms}\r\n                />\r\n              </ListItem>\r\n              <Divider />\r\n\r\n              <ListItem>\r\n                <ListItemText primary=\"Email\" secondary={formData.comments} />\r\n              </ListItem>\r\n            </List>\r\n            <br />\r\n\r\n            <div className={classes.btnGroup}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.button}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleConfirm}\r\n                className={classes.button}\r\n                startIcon={\r\n                  isSubmitting ? <CircularProgress size=\"1rem\" /> : null\r\n                }\r\n                disabled={isSubmitting}\r\n              >\r\n                {isSubmitting ? \"Submitting\" : \"Submit\"}\r\n              </Button>\r\n            </div>\r\n\r\n            <div>\r\n              <Dialog\r\n                open={open}\r\n                onClose={handleCloseDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                  {\"Thank you!\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    Patient Data has been added to patient's medical record.\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n                    Done\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </>\r\n        </Grid>\r\n      </Grid>\r\n      <br></br>\r\n      <br></br>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createPatientData: (patientData) =>\r\n      dispatch(createPatientData(patientData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirm);\r\n",["293","294"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\reducers\\patientDataReducer.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\actions\\patientDataActions.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\prescription-layout\\confirm.js",["295"],"import React, { useState } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core/\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createPrescription } from \"../../../store/actions/prescriptionActions\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst sleep = (time) => new Promise((acc) => setTimeout(acc, time));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n    padding: \"0.5em 1.5em\",\r\n  },\r\n  btnGroup: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction Confirm({\r\n  createPrescription,\r\n  formData,\r\n  setFormData,\r\n  prevStep,\r\n  activeStep,\r\n  setActiveStep,\r\n}) {\r\n  const classes = useStyles();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n    setActiveStep(0);\r\n  };\r\n\r\n  function handleBack(e) {\r\n    e.preventDefault();\r\n    prevStep();\r\n  }\r\n\r\n  async function handleConfirm(e) {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    console.log(\"submitting to DB...\");\r\n    // await sleep(2000);\r\n    createPrescription(formData);\r\n    setOpen(true);\r\n    setIsSubmitting(false);\r\n    setFormData({});\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container>\r\n        <Grid item xs={12} md={12} lg={12}>\r\n          <>\r\n            <AppBar title=\"Confirm User Data\" />\r\n            <List>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"Prescription\"\r\n                  secondary={formData.prescription}\r\n                />\r\n              </ListItem>\r\n              <Divider />\r\n            </List>\r\n            <br />\r\n\r\n            <div className={classes.btnGroup}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.button}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleConfirm}\r\n                className={classes.button}\r\n                startIcon={\r\n                  isSubmitting ? <CircularProgress size=\"1rem\" /> : null\r\n                }\r\n                disabled={isSubmitting}\r\n              >\r\n                {isSubmitting ? \"Submitting\" : \"Submit\"}\r\n              </Button>\r\n            </div>\r\n\r\n            <div>\r\n              <Dialog\r\n                open={open}\r\n                onClose={handleCloseDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                  {\"Thank you!\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    Prescription has been added to patient's medical record.\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n                    Done\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </>\r\n        </Grid>\r\n      </Grid>\r\n      <br></br>\r\n      <br></br>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createPrescription: (prescription) =>\r\n      dispatch(createPrescription(prescription)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirm);\r\n","D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\prescription-layout\\prescription-form.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\reducers\\prescriptionReducer.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\actions\\prescriptionActions.js",[],["296","297"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\general-medical-history-form.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\confirm.js",["298"],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\appointments-layout\\general-medical-history\\smoking-alcohol.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\reducers\\patientGeneralMedicalHistoryReducer.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\store\\actions\\patientGeneralMedicalHistoryActions.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\button-link\\index.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\our-features\\tiers.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\dashboard-layout\\title.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\form-stepper\\form-stepper.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\why-us\\why-us.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\why-us\\tiers.js",[],"D:\\NU\\NU10\\Grad\\implementation\\graduation-project\\src\\components\\modern-card\\modern-card.js",[],{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":64,"column":9,"nodeType":"305","messageId":"306","endLine":64,"endColumn":16},{"ruleId":"303","severity":1,"message":"307","line":68,"column":9,"nodeType":"305","messageId":"306","endLine":68,"endColumn":18},{"ruleId":"299","replacedBy":"308"},{"ruleId":"301","replacedBy":"309"},{"ruleId":"299","replacedBy":"310"},{"ruleId":"301","replacedBy":"311"},{"ruleId":"303","severity":1,"message":"312","line":58,"column":10,"nodeType":"305","messageId":"306","endLine":58,"endColumn":25},{"ruleId":"303","severity":1,"message":"307","line":60,"column":9,"nodeType":"305","messageId":"306","endLine":60,"endColumn":18},{"ruleId":"299","replacedBy":"313"},{"ruleId":"301","replacedBy":"314"},{"ruleId":"303","severity":1,"message":"315","line":1,"column":13,"nodeType":"305","messageId":"306","endLine":1,"endColumn":19},{"ruleId":"303","severity":1,"message":"316","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":25},{"ruleId":"303","severity":1,"message":"317","line":14,"column":8,"nodeType":"305","messageId":"306","endLine":14,"endColumn":16},{"ruleId":"303","severity":1,"message":"318","line":16,"column":10,"nodeType":"305","messageId":"306","endLine":16,"endColumn":17},{"ruleId":"303","severity":1,"message":"319","line":17,"column":10,"nodeType":"305","messageId":"306","endLine":17,"endColumn":41},{"ruleId":"299","replacedBy":"320"},{"ruleId":"301","replacedBy":"321"},{"ruleId":"299","replacedBy":"322"},{"ruleId":"301","replacedBy":"323"},{"ruleId":"299","replacedBy":"324"},{"ruleId":"301","replacedBy":"325"},{"ruleId":"303","severity":1,"message":"326","line":85,"column":11,"nodeType":"305","messageId":"306","endLine":85,"endColumn":21},{"ruleId":"303","severity":1,"message":"327","line":85,"column":23,"nodeType":"305","messageId":"306","endLine":85,"endColumn":38},{"ruleId":"299","replacedBy":"328"},{"ruleId":"301","replacedBy":"329"},{"ruleId":"303","severity":1,"message":"315","line":9,"column":13,"nodeType":"305","messageId":"306","endLine":9,"endColumn":19},{"ruleId":"299","replacedBy":"330"},{"ruleId":"301","replacedBy":"331"},{"ruleId":"303","severity":1,"message":"332","line":10,"column":8,"nodeType":"305","messageId":"306","endLine":10,"endColumn":20},{"ruleId":"303","severity":1,"message":"333","line":52,"column":10,"nodeType":"305","messageId":"306","endLine":52,"endColumn":15},{"ruleId":"303","severity":1,"message":"326","line":56,"column":11,"nodeType":"305","messageId":"306","endLine":56,"endColumn":21},{"ruleId":"303","severity":1,"message":"327","line":56,"column":23,"nodeType":"305","messageId":"306","endLine":56,"endColumn":38},{"ruleId":"303","severity":1,"message":"334","line":8,"column":8,"nodeType":"305","messageId":"306","endLine":8,"endColumn":11},{"ruleId":"303","severity":1,"message":"335","line":10,"column":10,"nodeType":"305","messageId":"306","endLine":10,"endColumn":19},{"ruleId":"303","severity":1,"message":"326","line":51,"column":11,"nodeType":"305","messageId":"306","endLine":51,"endColumn":21},{"ruleId":"303","severity":1,"message":"327","line":51,"column":23,"nodeType":"305","messageId":"306","endLine":51,"endColumn":38},{"ruleId":"299","replacedBy":"336"},{"ruleId":"301","replacedBy":"337"},{"ruleId":"338","severity":1,"message":"339","line":14,"column":7,"nodeType":"340","endLine":17,"endColumn":8},{"ruleId":"303","severity":1,"message":"341","line":27,"column":7,"nodeType":"305","messageId":"306","endLine":27,"endColumn":12},{"ruleId":"299","replacedBy":"342"},{"ruleId":"301","replacedBy":"343"},{"ruleId":"303","severity":1,"message":"341","line":25,"column":7,"nodeType":"305","messageId":"306","endLine":25,"endColumn":12},{"ruleId":"299","replacedBy":"344"},{"ruleId":"301","replacedBy":"345"},{"ruleId":"303","severity":1,"message":"341","line":25,"column":7,"nodeType":"305","messageId":"306","endLine":25,"endColumn":12},"no-native-reassign",["346"],"no-negated-in-lhs",["347"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'isInvalid' is assigned a value but never used.",["346"],["347"],["346"],["347"],"'confirmPassword' is assigned a value but never used.",["346"],["347"],"'ROUTES' is defined but never used.","'useState' is defined but never used.","'SaveIcon' is defined but never used.","'connect' is defined but never used.","'createPatientGeneralInformation' is defined but never used.",["346"],["347"],["346"],["347"],["346"],["347"],"'transcript' is assigned a value but never used.","'resetTranscript' is assigned a value but never used.",["346"],["347"],["346"],["347"],"'KeyboardIcon' is defined but never used.","'files' is assigned a value but never used.","'Box' is defined but never used.","'Copyright' is defined but never used.",["346"],["347"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'sleep' is assigned a value but never used.",["346"],["347"],["346"],["347"],"no-global-assign","no-unsafe-negation"]